@page "/list"
@page "/list/{id:int}"

@inject IProfessionalListService ProfessionalListService

@if (Id == null) {
  <PageTitle>Create a New Professional</PageTitle>
  <h3>Create a New Professional</h3>
}
else
{
  <PageTitle>Update @list.Name</PageTitle>
  <h3>Update @list.Name</h3> 
}

<EditForm Model="list" OnSubmit="HandleSubmit">
    <div>
    <label for="name">Name</label>
    <InputText id="name" @bind-Value="list.Name" class="form-control"></InputText>
    </div>
    <div>
    <label for="position">Position</label>
    <InputText id="position" @bind-Value="list.Position" class="form-control"></InputText>
    </div>
    <div>
        <label>Style</label>
    <InputSelect @bind-Value="list.StyleId" class="form-select">
    @foreach (var style in ProfessionalListService.Styles)
    {
      <option Value="@style.Id">@style.Name</option>
    }
    </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteList">Delete...</button>
</EditForm>



@code {

    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    ProfessionalList list = new ProfessionalList { Style = new Style() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save Professional" : "Update Professional";
        await ProfessionalListService.GetStyles();
    }


    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            list.Style = ProfessionalListService.Styles[0];
            list.StyleId = list.Style.Id;
        }
        else
        {
            list = await ProfessionalListService.GetSingleList((int)Id);
        }
    }

    async void HandleSubmit()
    {
        if (Id == null)
        {
            await ProfessionalListService.CreateList(list);
        }
        else
        {
            await ProfessionalListService.UpdateList(list);
        }
    }

        async Task DeleteList()
    {
      await ProfessionalListService.DeleteList(list.Id);
    }
}

